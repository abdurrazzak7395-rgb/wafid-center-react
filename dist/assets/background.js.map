{"version":3,"file":"background.js","sources":["../../src/background.ts"],"sourcesContent":["// background.ts — MV3 Service Worker (TypeScript)\n/* eslint-disable no-console */\n\n// -------- Types that match your bridge/content --------\ntype BridgeRequest = {\n  type: \"automation-run-row\";\n  requestId: string;\n  index: number;\n  row: unknown;\n  timeoutMs?: number;\n  receiverTabUrl?: string;\n  autoCloseMs?: number; // optional: auto-close tab after this delay\n};\n\ntype BridgeResponse = {\n  type: \"automation-result\";\n  requestId: string;\n  ok: boolean;\n  error?: string;\n  _via?: string;\n};\n\n// -------- Small constants --------\nconst DEBUG_PREFIX = \"[Wafid Center Helper]\";\nconst DEFAULT_RECEIVER_URL = \"https://wafid.com/book-appointment/\";\n\n// ====== Lifecycle logs ======\nchrome.runtime.onInstalled.addListener((details) => {\n  console.log(`${DEBUG_PREFIX} Installed`, details);\n});\n\nchrome.runtime.onStartup.addListener(() => {\n  console.log(`${DEBUG_PREFIX} onStartup`);\n});\n\n// Optional: click on toolbar icon to wake worker & log\nchrome.action?.onClicked?.addListener((tab) => {\n  console.log(`${DEBUG_PREFIX} action clicked from`, tab?.url);\n});\n\n// ====== Core helper: open a tab, wait load, inject function ======\nasync function openAndInject(\n  url: string,\n  func: (row: any) => void,\n  arg: any\n): Promise<{ tabId: number }> {\n  const created = await new Promise<chrome.tabs.Tab>((resolve, reject) => {\n    chrome.tabs.create({ url }, (tab) => {\n      const lastErr = chrome.runtime.lastError;\n      if (lastErr || !tab || !tab.id) {\n        reject(new Error(lastErr?.message || \"Failed to open tab\"));\n      } else {\n        console.log(`${DEBUG_PREFIX} created tab:`, tab);\n        resolve(tab);\n      }\n    });\n  });\n\n  const tabId = created.id!;\n\n  // Wait for tab to complete loading\n  await new Promise<void>((resolve) => {\n    const onUpdated = (updatedId: number, changeInfo: chrome.tabs.TabChangeInfo) => {\n      if (updatedId === tabId && changeInfo.status === \"complete\") {\n        chrome.tabs.onUpdated.removeListener(onUpdated);\n        resolve();\n      }\n    };\n    chrome.tabs.onUpdated.addListener(onUpdated);\n  });\n\n  // Inject the automation function\n  await new Promise<void>((resolve, reject) => {\n    chrome.scripting.executeScript(\n      {\n        target: { tabId },\n        func,\n        args: [arg] as [any],  // <-- correct tuple\n      },\n      () => {\n        const err = chrome.runtime.lastError;\n        if (err) reject(new Error(err.message));\n        else resolve();\n      }\n    );\n  });\n\n  return { tabId };\n}\n\n// ====== Main message router ======\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\n  console.log(\"[BG] onMessage:\", msg, \"from\", sender);\n\n  // ---- Case 1: bridge-originated automation (roundtrip response expected) ----\n  if (msg?.type === \"automation-run-row\") {\n    const { requestId, row, receiverTabUrl, autoCloseMs } = msg as BridgeRequest;\n    const url = receiverTabUrl || DEFAULT_RECEIVER_URL;\n\n    (async () => {\n      try {\n        const { tabId } = await openAndInject(url, triggerAutomationInReceiverTab, row);\n\n        // (Optional) auto-close the receiver tab after some delay if you want\n        if (typeof autoCloseMs === \"number\" && autoCloseMs > 0) {\n          setTimeout(() => {\n            try {\n              chrome.tabs.remove(tabId);\n              console.log(`${DEBUG_PREFIX} closed receiver tab`, tabId);\n            } catch (e) {\n              console.warn(`${DEBUG_PREFIX} auto-close failed`, e);\n            }\n          }, autoCloseMs);\n        }\n\n        const res: BridgeResponse = {\n          type: \"automation-result\",\n          requestId,\n          ok: true,\n          _via: \"background\",\n        };\n        sendResponse(res);\n      } catch (e: any) {\n        console.error(`${DEBUG_PREFIX} automation-run-row failed:`, e);\n        const res: BridgeResponse = {\n          type: \"automation-result\",\n          requestId,\n          ok: false,\n          error: String(e?.message || e),\n          _via: \"background\",\n        };\n        sendResponse(res);\n      }\n    })();\n\n    return true; // async response\n  }\n\n  // ---- Case 2: legacy API: trigger-automation-in-new-tab (fire-and-ack) ----\n  if (msg?.type === \"trigger-automation-in-new-tab\") {\n    const url: string = msg.receiverTabUrl || DEFAULT_RECEIVER_URL;\n    const row = msg.row ?? {};\n\n    (async () => {\n      try {\n        await openAndInject(url, triggerAutomationInReceiverTab, row);\n        sendResponse({ ok: true });\n      } catch (e: any) {\n        sendResponse({ ok: false, error: e?.message || String(e) });\n      }\n    })();\n\n    return true; // async response\n  }\n\n  // ---- Case 3: payment-found → post to backend ----\n  if (msg?.type === \"payment-found\") {\n    const payment = String(msg.payment || \"\");\n    // TODO: replace with your real backend\n    const backendUrl = \"https://your-backend.example.com/api/payment\";\n\n    fetch(backendUrl, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ payment }),\n    })\n      .then(async (r) => {\n        if (!r.ok) throw new Error(`Backend ${r.status}`);\n        const data = await r.json().catch(() => ({}));\n        sendResponse({ ok: true, data });\n      })\n      .catch((e) => {\n        console.error(\"[BG] backend post failed:\", e);\n        sendResponse({ ok: false, error: String(e) });\n      });\n\n    return true; // async response\n  }\n\n  // Unknown message type—no-op\n  return false;\n});\n\n// ====== The function we inject into the receiver tab ======\n// Runs in the page's isolated world; has DOM access and can chrome.runtime.sendMessage back.\nfunction triggerAutomationInReceiverTab(row: any) {\n  console.log(\"[Receiver] automation start with row:\", row);\n\n  // Small helper to set input value and dispatch change events\n  const setVal = (sel: string, val: string | undefined) => {\n    if (!val) return;\n    const el = document.querySelector<HTMLInputElement>(sel);\n    if (!el) return;\n    el.value = val;\n    el.dispatchEvent(new Event(\"input\", { bubbles: true }));\n    el.dispatchEvent(new Event(\"change\", { bubbles: true }));\n  };\n\n  // TODO: map WAFID form selectors correctly for your page\n  setVal(\"input[name='name']\", (row as any)?.name);\n  setVal(\"input[name='email']\", (row as any)?.email);\n  setVal(\"input[name='phone']\", (row as any)?.phone);\n  setVal(\"input[name='national_id']\", (row as any)?.nationalId);\n  setVal(\"input[name='passport']\", (row as any)?.passport);\n  setVal(\"input[name='city']\", (row as any)?.city);\n  setVal(\"input[name='country']\", (row as any)?.country);\n  setVal(\"input[name='appointment_date']\", (row as any)?.appointmentDate);\n\n  // Submit button\n  const submitBtn =\n    document.querySelector<HTMLButtonElement>(\"button[type='submit'], .btn-submit, [data-action='submit']\");\n  if (submitBtn) {\n    submitBtn.click();\n  } else {\n    console.warn(\"[Receiver] submit button not found\");\n  }\n\n  // Find payment id/url on the page\n  const pickPayment = (): string | null => {\n    const byAttr = document.querySelector<HTMLElement>(\"[data-payment-id]\");\n    if (byAttr) return byAttr.getAttribute(\"data-payment-id\");\n\n    const byId = document.querySelector<HTMLElement>(\"#paymentId, #payment, #payment-url\");\n    if (byId) return (byId.textContent || byId.getAttribute(\"href\") || \"\").trim() || null;\n\n    const link = document.querySelector<HTMLAnchorElement>(\".payment a, a.payment, a[href*='payment']\");\n    if (link) return link.href;\n\n    return null;\n  };\n\n  // If payment appears immediately\n  const immediate = pickPayment();\n  if (immediate) {\n    try {\n      chrome.runtime.sendMessage({ type: \"payment-found\", ok: true, payment: immediate });\n    } catch (e) {\n      console.warn(\"[Receiver] sendMessage failed:\", e);\n    }\n    return;\n  }\n\n  // Observe DOM mutations until payment is detected\n  const observer = new MutationObserver(() => {\n    const p = pickPayment();\n    if (p) {\n      try {\n        observer.disconnect();\n      } catch {}\n      try {\n        chrome.runtime.sendMessage({ type: \"payment-found\", ok: true, payment: p });\n      } catch (e) {\n        console.warn(\"[Receiver] sendMessage failed:\", e);\n      }\n    }\n  });\n  observer.observe(document.documentElement, { childList: true, subtree: true });\n\n  // Safety timeout\n  setTimeout(() => {\n    try {\n      observer.disconnect();\n    } catch {}\n    const p = pickPayment();\n    if (p) {\n      try {\n        chrome.runtime.sendMessage({ type: \"payment-found\", ok: true, payment: p });\n      } catch (e) {\n        console.warn(\"[Receiver] sendMessage failed:\", e);\n      }\n    } else {\n      try {\n        chrome.runtime.sendMessage({\n          type: \"payment-found\",\n          ok: false,\n          error: \"Payment info not found within timeout\",\n        });\n      } catch (e) {\n        console.warn(\"[Receiver] sendMessage failed:\", e);\n      }\n    }\n  }, 60_000);\n}\n\n// Make this a module file for MV3 type safety\nexport {};\n"],"names":["DEBUG_PREFIX","DEFAULT_RECEIVER_URL","details","tab","openAndInject","url","func","arg","tabId","resolve","reject","lastErr","onUpdated","updatedId","changeInfo","err","msg","sender","sendResponse","requestId","row","receiverTabUrl","autoCloseMs","triggerAutomationInReceiverTab","e","res","payment","data","setVal","sel","val","el","submitBtn","pickPayment","byAttr","byId","link","immediate","observer","p"],"mappings":"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"}