{"version":3,"file":"background.js","sources":["../../src/background.ts"],"sourcesContent":["chrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\n  // Check if the message type is 'trigger-automation-in-new-tab'\n  if (msg?.type === \"trigger-automation-in-new-tab\") {\n    const receiverTabUrl: string = msg.receiverTabUrl; // URL of the receiver tab (e.g., 'wafid.com')\n\n    // Open the new tab with the receiver URL\n    chrome.tabs.create({ url: receiverTabUrl }, (newTab) => {\n      // Once the new tab is opened, inject the script to trigger automation\n      chrome.scripting.executeScript({\n        target: { tabId: newTab.id! },\n        func: triggerAutomationInReceiverTab,\n        args: [msg.row], // Passing row data to the receiver tab\n      }, (injectedResult) => {\n        // Check for errors when executing the script\n        if (chrome.runtime.lastError) {\n          console.error(\"Error in executing script: \", chrome.runtime.lastError);\n          sendResponse({ ok: false, error: chrome.runtime.lastError.message });\n        } else {\n          console.log(\"Script executed successfully\", injectedResult);\n          sendResponse({ ok: true });\n        }\n      });\n    });\n\n    return true;  // Keep the message channel open for async response\n  }\n\n  // Ensure response is sent in case no action is performed\n  return true; \n});\n\n// Function to trigger automation in the receiver tab\nfunction triggerAutomationInReceiverTab(row: { name: string; email: string; phone: string; nationalId: string; passport: string; city: string; country: string; appointmentDate: string; }) {\n  console.log(\"Receiver tab automation triggered with data:\", row);\n\n  try {\n    // Example: Filling out form fields with values from row object\n    if (row.name) {\n      const nameInput = document.querySelector(\"input[name='name']\") as HTMLInputElement;\n      if (nameInput) nameInput.value = row.name;\n    }\n\n    if (row.email) {\n      const emailInput = document.querySelector(\"input[name='email']\") as HTMLInputElement;\n      if (emailInput) emailInput.value = row.email;\n    }\n\n    // More fields...\n\n    // Example: Trigger form submission by clicking the submit button\n    const submitButton = document.querySelector(\"button[type='submit']\") as HTMLButtonElement;\n    if (submitButton) {\n      submitButton.click();\n    }\n\n    console.log(\"Form filled and automation triggered successfully.\");\n  } catch (error) {\n    console.error(\"Error in triggering automation:\", error);\n  }\n}\n"],"names":["msg","sender","sendResponse","receiverTabUrl","newTab","triggerAutomationInReceiverTab","injectedResult","row","nameInput","emailInput","submitButton","error"],"mappings":"AAAA,OAAO,QAAQ,UAAU,YAAY,CAACA,EAAKC,EAAQC,IAAiB,CAElE,GAAIF,GAAK,OAAS,gCAAiC,CACjD,MAAMG,EAAyBH,EAAI,eAGnC,cAAO,KAAK,OAAO,CAAE,IAAKG,CAAA,EAAmBC,GAAW,CAEtD,OAAO,UAAU,cAAc,CAC7B,OAAQ,CAAE,MAAOA,EAAO,EAAA,EACxB,KAAMC,EACN,KAAM,CAACL,EAAI,GAAG,CAAA,EACZM,GAAmB,CAEjB,OAAO,QAAQ,WACjB,QAAQ,MAAM,8BAA+B,OAAO,QAAQ,SAAS,EACrEJ,EAAa,CAAE,GAAI,GAAO,MAAO,OAAO,QAAQ,UAAU,QAAS,IAEnE,QAAQ,IAAI,+BAAgCI,CAAc,EAC1DJ,EAAa,CAAE,GAAI,GAAM,EAE7B,CAAC,CACH,CAAC,EAEM,EACT,CAGA,MAAO,EACT,CAAC,EAGD,SAASG,EAA+BE,EAAoJ,CAC1L,QAAQ,IAAI,+CAAgDA,CAAG,EAE/D,GAAI,CAEF,GAAIA,EAAI,KAAM,CACZ,MAAMC,EAAY,SAAS,cAAc,oBAAoB,EACzDA,IAAWA,EAAU,MAAQD,EAAI,KACvC,CAEA,GAAIA,EAAI,MAAO,CACb,MAAME,EAAa,SAAS,cAAc,qBAAqB,EAC3DA,IAAYA,EAAW,MAAQF,EAAI,MACzC,CAKA,MAAMG,EAAe,SAAS,cAAc,uBAAuB,EAC/DA,GACFA,EAAa,MAAA,EAGf,QAAQ,IAAI,oDAAoD,CAClE,OAASC,EAAO,CACd,QAAQ,MAAM,kCAAmCA,CAAK,CACxD,CACF"}